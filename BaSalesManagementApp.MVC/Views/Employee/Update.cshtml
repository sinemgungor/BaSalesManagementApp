@model BaSalesManagementApp.MVC.Models.EmployeeVMs.EmployeeUpdateVM
@using BaSalesManagementApp.Core.Enums;
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resource> localizer

@{
    ViewData["Title"] = localizer["Update_Employee"];
    var rolesList = Enum.GetValues(typeof(Roles)).Cast<Roles>().ToList();
}

<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="py-3 mb-4">
            <span class="text-muted fw-light">@localizer["Employee"] /</span>
            @localizer["Update"]
        </h4>
        <div class="row">
            <div class="content-wrapper">
                <div class="col-md-6">
                    <div class="card mb-4">
                        <div class="card-body">
                            <form id="employeeForm" asp-action="Update" method="post" enctype="multipart/form-data">
                                <input type="hidden" asp-for="Id" />
                                <div class="mb-3">
                                    <label asp-for="FirstName" class="form-label">@localizer["FirstName"]</label>
                                    <input asp-for="FirstName" class="form-control" />
                                    <span class="text-danger" id="firstNameError"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="LastName" class="form-label">@localizer["LastName"]</label>
                                    <input asp-for="LastName" class="form-control" />
                                    <span class="text-danger" id="lastNameError"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="Email" class="form-label">@localizer["Email"]</label>
                                    <input asp-for="Email" type="Email" class="form-control" />
                                    <span class="text-danger" id="emailError"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="Photo" class="form-label">@localizer["Photo"]</label>

                                    @if (Model.PhotoUrl != null)
                                    {
                                        <img id="PhotoShow" src="@Model.PhotoUrl" alt="Current Photo" class="img-thumbnail mb-2" style="max-width: 200px;" />
                                    }
                                    @if (Model.PhotoUrl != null)
                                    {
                                        <!-- Fotoğraf kaldırma seçeneği -->
                                        <div class="form-check mt-2">
                                            <input asp-for="IsPhotoRemoved" class="form-check-input" type="checkbox" id="RemovePhotoCheckbox" />
                                            <label class="form-check-label" for="RemovePhotoCheckbox">@localizer["Remove_Photo"]</label>
                                        </div>
                                    }


                                    <input asp-for="Photo" type="file" class="form-control" accept=".jpg,.jpeg,.png,.gif,.tiff,.bmp" id="Photo" />
                                    <span class="text-danger" id="photoError"></span>
                                    <img id="PhotoPreview" src="#" alt="Photo Preview" style="display: none; margin-top: 10px; max-width: 200px;" />
                                </div>

                                <div class="mb-3">
                                    <label asp-for="Role" class="form-label">@localizer["Title"]</label>
                                    <select asp-for="Role" class="form-control">
                                        @foreach (var role in rolesList)
                                        {
                                            @if (role.ToString() == Model.Title)
                                            {
                                                <option value="@role" selected>@role.ToString()</option>
                                            }
                                            else
                                            {
                                                <option value="@role">@role.ToString()</option>
                                            }                                                         }
                                    </select>
                                    <span asp-validation-for="Role" class="text-danger"></span>
                                </div>
                                <div class="form-group mb-3">
                                    <label asp-for="CompanyId" class="form-label">@localizer["Company"].ToString().ToUpper(new System.Globalization.CultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name))</label>
                                    <select asp-for="CompanyId" class="form-control" id="companySelect" style="width:100%">
                                        <option value="">@Html.Encode(@localizer["Select_Company"])</option>
                                        @foreach (var company in ViewBag.Companies)
                                        {
                                            <option value="@company.Id">@company.Name</option>
                                        }
                                    </select>
                                    <span class="text-danger" id="companyError"></span>
                                </div>
                                <button type="submit" class="btn btn-primary">@localizer["Update"]</button>
                                <a asp-action="Index" class="btn btn-secondary">@localizer["BackToList"]</a>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>




@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script src="~/assets/js/employeeFormValidation.js"></script>
    <script>
        // Select2 için yapılandırma
        $('#companySelect').select2({
            placeholder: "@Html.Raw(localizer["Select_Company"])",
            allowClear: true,
            matcher: function (params, data) {
                // Arama terimi yoksa, mevcut seçenekleri göster
                if ($.trim(params.term) === '') {
                    return data;
                }

                // Veri boşsa, eşleşme yok demektir
                if (typeof data.text === 'undefined') {
                    return null;
                }

                // Arama terimini küçük harflere çevir ve baştan eşleşme kontrolü yap
                var searchTerm = params.term.toLowerCase();
                var optionText = data.text.toLowerCase();

                // Eğer seçenek, arama terimiyle başlıyorsa, sonucu döndür
                if (optionText.indexOf(searchTerm) === 0) {
                    return data;
                }

                // Aksi takdirde eşleşme yok
                return null;
            },
            sorter: function (data) {
                // Alfabetik sıralama
                return data.sort(function (a, b) {
                    return a.text.localeCompare(b.text);
                });
            }
        });

        // Mesajlar
        var firstNameRequiredMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_NAMESPACE_IS_REQUIRED].Value);
        var firstNameMaxLengthMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_NAME_MAX_LENGTH_ERROR].Value);
        var firstNameMinLengthMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_NAME_MIN_LENGTH_ERROR].Value);
        var firstNameNumericForbiddenMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_NAME_NUMERIC_FORBIDDEN].Value);

        var lastNameRequiredMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_SURNAME_FIELD_IS_REQUIRED].Value);
        var lastNameMaxLengthMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_SURNAME_MAX_LENGTH_ERROR].Value);
        var lastNameMinLengthMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_SURNAME_MIN_LENGTH_ERROR].Value);
        var lastNameNumericForbiddenMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_SURNAME_NUMERIC_FORBIDDEN].Value);

        var emailRequiredMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_E_MAIL_FIELD_IS_REQUIRED].Value);
        var emailValidRequiredMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_VALID_EMAIL_REQUIRED].Value);
        var emailInvalidDomainMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_INVALID_EMAIL_DOMAIN].Value);

        var photoSizeExceededMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_PHOTO_SIZE_EXCEEDS_LIMIT].Value);
        var photoInvalidFileTypeMessage = @Json.Serialize(localizer[Messages.EMPLOYEE_PHOTO_INVALID_FILE_TYPE].Value);

        var companyNameRequiredMessage = @Json.Serialize(localizer[Messages.COMPANY_NAME_NOT_EMPTY].Value);

        // Fotoğraf yükleme
        document.getElementById('Photo').addEventListener('change', function (event) {
            const file = event.target.files[0];
            const permittedExtensions = ['.jpg', '.jpeg', '.png'];
            const maxFileSize = 500 * 1024;

            if (file) {
                const extension = file.name.substring(file.name.lastIndexOf('.')).toLowerCase();
                const fileSize = file.size;


                if (!permittedExtensions.includes(extension)) {
                    document.getElementById('photoError').innerText = photoInvalidFileTypeMessage;
                    document.getElementById('PhotoShow').style.display = 'none';
                    return;
                }


                if (fileSize > maxFileSize) {
                    document.getElementById('photoError').innerText = photoSizeExceededMessage;
                    document.getElementById('PhotoShow').style.display = 'none';
                    return;
                }


                const reader = new FileReader();
                reader.onload = function (e) {
                    const photoShow = document.getElementById('PhotoShow');
                    photoShow.src = e.target.result;
                    photoShow.style.display = 'block';
                    document.getElementById('photoError').innerText = '';
                };

                reader.readAsDataURL(file);
            }
        });

        // Fotoğraf Kaldırma
        document.getElementById('RemovePhotoCheckbox').addEventListener('change', function () {
            const currentPhotoPreview = document.getElementById('PhotoShow');
            if (this.checked) {
                if (currentPhotoPreview) {
                    currentPhotoPreview.style.display = 'none';
                }
            } else {
                if (currentPhotoPreview) {
                    currentPhotoPreview.style.display = 'block';
                }
            }
        });
    </script>
}
