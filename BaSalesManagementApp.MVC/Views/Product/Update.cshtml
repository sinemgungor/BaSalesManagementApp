@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resource> localizer
@model BaSalesManagementApp.MVC.Models.ProductVMs.ProductUpdateVM

@{
    ViewData["Title"] = localizer["Update"];
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <h4 class="py-3 mb-4">
            <span class="text-muted fw-light">@localizer["Product"] /</span>
            @localizer["Update"]
        </h4>
        <div class="row">
            <div class="content-wrapper">
                <div class="col-md-6 col-lg-6">
                    <!-- Formu genişliğe göre ayarlıyoruz -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <form asp-action="Update" id="productForm" method="post" enctype="multipart/form-data">
                                <input type="hidden" asp-for="Id" class="form-control" />
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="mb-3">
                                    <label asp-for="Name" class="control-label">@localizer["Product_Name"]</label>
                                    <input asp-for="Name" class="form-control"/>
                                    <span class="text-danger" id="nameError"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="Price" class="control-label">@localizer["Price"]</label>
                                    <input asp-for="Price" class="form-control" type="number" />
                                    <span class="text-danger" id="priceError"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="CategoryId" class="form-label">@localizer["CategoryName"]</label>
                                    <select asp-for="CategoryId" class="form-control" id="categorySelect" style="width: 100%;">
                                        <!-- Genişlik ayarı -->
                                        <option value="">@localizer["Select_Category"]</option>
                                        @foreach (var category in Model.Categories)
                                        {
                                            <option value="@category.Id">@category.Name</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                                    <span class="text-danger" id="categoryError"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="CompanyId" class="form-label">@localizer["Company"]</label>
                                    <select asp-for="CompanyId" class="form-control" id="companySelect" style="width: 100%;">
                                        <!-- Genişlik ayarı -->
                                        @if (Model != null && Model.Companies != null && Model.Companies.Any())
                                        {
                                            <option value="">@localizer["Select_Company"]</option>
                                            @foreach (var company in Model.Companies)
                                            {
                                                <option value="@company.Id">@company.Name</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="" disabled selected></option>
                                        }
                                    </select>
                                    <span asp-validation-for="CompanyId" class="text-danger"></span>
                                    <span class="text-danger" id="companyError"></span>
                                </div>
                                <div>
                                    <input type="submit" value="@localizer["Save"]" class="btn btn-primary" />
                                    <a asp-action="Index" class="btn btn-secondary">@localizer["BackToList"]</a>
                                </div>
                            </form>

                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    @section Scripts {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
        <script src="~/assets/js/productFormValidation.js"></script>
        <script>
            $(document).ready(function () {
                // Company Select2
                $('#companySelect').select2({
                    placeholder: '@Html.Raw(localizer["Select_Company"])',
                    allowClear: true,
                    width: 'resolve', // width: 'resolve' ekleyerek genişlik sorununu çözdük.
                    matcher: function (params, data) {
                        // Arama terimi yoksa, mevcut seçenekleri göster
                        if ($.trim(params.term) === '') {
                            return data;
                        }

                        // Veri boşsa, eşleşme yok demektir
                        if (typeof data.text === 'undefined') {
                            return null;
                        }

                        // Arama terimini küçük harflere çevir ve baştan eşleşme kontrolü yap
                        var searchTerm = params.term.toLowerCase();
                        var optionText = data.text.toLowerCase();

                        // Eğer seçenek, arama terimiyle başlıyorsa, sonucu döndür
                        if (optionText.indexOf(searchTerm) === 0) {
                            return data;
                        }

                        // Aksi takdirde eşleşme yok
                        return null;
                    },
                    sorter: function (data) {
                        // Alfabetik sıralama
                        return data.sort(function (a, b) {
                            return a.text.localeCompare(b.text);
                        });
                    }
                });

                // Category Select2
                $('#categorySelect').select2({
                    placeholder: "@localizer["Select_Category"]",
                    allowClear: true,
                    width: 'resolve',
                    matcher: function (params, data) {
                        // Arama terimi yoksa, mevcut seçenekleri göster
                        if ($.trim(params.term) === '') {
                            return data;
                        }

                        // Veri boşsa, eşleşme yok demektir
                        if (typeof data.text === 'undefined') {
                            return null;
                        }

                        // Arama terimini küçük harflere çevir ve baştan eşleşme kontrolü yap
                        var searchTerm = params.term.toLowerCase();
                        var optionText = data.text.toLowerCase();

                        // Eğer seçenek, arama terimiyle başlıyorsa, sonucu döndür
                        if (optionText.indexOf(searchTerm) === 0) {
                            return data;
                        }

                        // Aksi takdirde eşleşme yok
                        return null;
                    },
                    sorter: function (data) {
                        // Alfabetik sıralama
                        return data.sort(function (a, b) {
                            return a.text.localeCompare(b.text);
                        });
                    }
                });
            });

            var nameRequiredMessage = @Json.Serialize(localizer[Messages.PRODUCT_NAME_CANNOT_BE_EMPTY].Value);
            var nameNumericForbiddenMessage = @Json.Serialize(localizer[Messages.PRODUCT_NAME_CANNOT_CONTAIN_NUMBER].Value);
            var companyNameRequiredMessage = @Json.Serialize(localizer[Messages.COMPANY_NAME_NOT_EMPTY].Value);
            var categoryNameRequiredMessage = @Json.Serialize(localizer[Messages.CATEGORY_NAMESPACE_IS_REQUIRED].Value);
            var priceRequiredMessage = @Json.Serialize(localizer[Messages.PRODUCT_PRICE_CANNOT_BE_EMPTY].Value);
            var priceInvalidMessage = @Json.Serialize(localizer[Messages.PRODUCT_PRICE_MUST_BE_GREATER_THAN_ZERO].Value);
            var priceInvalidMessage = @Json.Serialize(localizer[Messages.PRODUCT_PRICE_MUST_HAVE_NO_MORE_THAN_TWO_DECIMAL_PLACES].Value);

        </script>
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }

