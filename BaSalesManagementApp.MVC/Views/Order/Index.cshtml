@model IPagedList<OrderListVM>
@using Microsoft.Extensions.Localization
@using X.PagedList.Mvc.Common
@using X.PagedList.Mvc.Core
@using X.PagedList
@using X.PagedList.Mvc.Core.Common
 @using Microsoft.Extensions.Localization
@inject IStringLocalizer<Resource> localizer


@{
	ViewData["Title"] = localizer["OrderIndex"];
}
<head>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.5.0/font/bootstrap-icons.min.css">
</head>
<div class="content-wrapper">
	<div class="container-xxl flex-grow-1 container-p-y">
		<h4 class="py-3 mb-4"><span class="text-muted fw-light">@localizer["Order"] /</span> @localizer["List"]</h4>
		<div class="d-flex justify-content-between align-items-center mb-3">
			<a asp-action="Create" class="btn btn-primary">@localizer["Create_New"]</a>

			<div class="d-flex">
				<form method="get" asp-action="Index" class="d-inline-block me-3">
					<label>@localizer["Show"]</label>
					<select id="pageSizeSelect" name="pageSize" onchange="this.form.submit()" class="form-select d-inline-block w-auto ms-2">
						@{
							var pageSizes = new[] { 5, 10, 20, 50 };
							var currentPageSize = ViewBag.CurrentPageSize;
						}
						@foreach (var size in pageSizes)
						{
							<option value="@size" selected="@(ViewBag.CurrentPageSize == size)">@size</option>
						}
					</select>
					<label>@localizer["Entries"]</label>

					<!-- Mevcut sıralama parametresini form verisine dahil et -->
					<input type="hidden" name="sortOrder" value="@ViewBag.CurrentSort" />
				</form>

				<div id="sortOrder" class="dropdown">
					<button class="btn btn-primary" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
						<i class="bi bi-filter" style="font-size:1rem"></i>
					</button>
					<div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
						<a class="dropdown-item" data-value="alphabetical" href="#">A-Z</a>
						<a class="dropdown-item" data-value="alphabeticaldesc" href="#">Z-A</a>
						<a class="dropdown-item" data-value="date" href="#">@localizer["Newest_First"]</a>
						<a class="dropdown-item" data-value="datedesc" href="#">@localizer["Oldest_First"]</a>
						<a class="dropdown-item" data-value="active" href="#">@localizer["ActiveOrders"]</a>
						<a class="dropdown-item" data-value="inactive" href="#">@localizer["InactiveOrders"]</a>
					</div>
				</div>
			</div>
		</div>

		<div class="card">
			<div class="table-responsive text-nowrap">
				<table class="table">
					<thead>
						<tr>
							<th>
								@localizer["ColumnStatus"].ToString().ToUpper(new System.Globalization.CultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name))
							</th>
							<th>
								@localizer["ColumnDate"].ToString().ToUpper(new System.Globalization.CultureInfo("tr-TR"))
							</th>
							<th>
								@localizer["ColumnCreator"].ToString().ToUpper(new System.Globalization.CultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name))
							</th>
							<th>
								@localizer["GrandTotalPrice"].ToString().ToUpper(new System.Globalization.CultureInfo(System.Threading.Thread.CurrentThread.CurrentCulture.Name))
							</th>
							<th class="text-end">
								@localizer["Actions"]
							</th>
						</tr>
					</thead>
					<tbody class="table-border-bottom-0">
						@foreach (var order in Model)
						{
							<tr>
								<td>
									@if (order.IsActive)
									{
										<i class="fas fa-check text-primary"></i>
									}
									else
									{
										<i class="fas fa-times text-danger"></i>
									}
								</td>
								<td>@order.OrderDate</td>
								<td>@order.AdminName</td>
								<td>@order.TotalPrice</td>
								<td class="text-end">
									<div class="dropdown">
										<button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown" style="margin-right: 28px;">
											<i class="bx bx-dots-vertical-rounded"></i>
										</button>
										<div class="dropdown-menu">
											<a asp-action="Details" asp-route-orderId="@order.Id" class="dropdown-item"><i class="bx bx-info-circle me-1"></i> @localizer["Details"]</a>
											<a asp-action="Update" asp-route-orderId="@order.Id" class="dropdown-item"><i class="bx bx-edit-alt me-1"></i> @localizer["Update"]</a>
											<a href="javascript:;" class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deleteModal" data-order-id="@order.Id">
												<i class="bx bx-trash me-1"></i> @localizer["Delete"]
											</a>
										</div>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
			<div class="d-flex justify-content-center mt-3">
				@Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = ViewBag.CurrentPageSize }), new PagedListRenderOptions
{
	Display = PagedListDisplayMode.Always,
	UlElementClasses = new[] { "pagination", "justify-content-center" },
	LiElementClasses = new[] { "page-item" },
	PageClasses = new[] { "page-link" },
	LinkToPreviousPageFormat = @localizer["Previous"],
	LinkToNextPageFormat = @localizer["Next"],
	LinkToFirstPageFormat = @localizer["First"],
	LinkToLastPageFormat = @localizer["Last"],
	ContainerDivClasses = new[] { "d-flex", "justify-content-center" }
})
			</div>
		</div>
	</div>
</div>
<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="deleteModalLabel">@localizer["DELETE_CONFIRM_TITLE_ORDER"]</h5>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div class="modal-body">
				@localizer["DELETE_CONFIRM_ORDER"]
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@localizer["CANCEL_ORDER"]</button>
				<a id="confirmDeleteButton" href="#" class="btn btn-danger">@localizer["DELETE_ORDER"]</a>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var deleteModal = document.getElementById('deleteModal');
			deleteModal.addEventListener('show.bs.modal', function (event) {
				var button = event.relatedTarget;
				var orderId = button.getAttribute('data-order-id');
				var confirmDeleteButton = deleteModal.querySelector('#confirmDeleteButton');
				confirmDeleteButton.href = '/Order/Delete?orderId=' + orderId;
			});
			var sortOrderSelect = document.getElementById('sortOrder');
			var sortOrderLinks = sortOrderSelect.querySelectorAll('.dropdown-item');

			function updateSortOrderFromUrl() {
				var urlParams = new URLSearchParams(window.location.search);
				var sortOrder = urlParams.get('sortOrder') || 'date';
				sortOrderLinks.forEach(function (link) {
					if (link.getAttribute('data-value') === sortOrder) {
						link.classList.add('active');
					} else {
						link.classList.remove('active');
					}
				});
			}

			function updatePageLinks() {
				var selectedSortOrder = document.querySelector('.dropdown-item.active').getAttribute('data-value');

				document.querySelectorAll('.pagination a').forEach(function (link) {
					var href = link.getAttribute('href');
					var url = new URL(href, window.location.href);
					var urlParams = new URLSearchParams(url.search);

					urlParams.set('sortOrder', selectedSortOrder);
					url.search = urlParams.toString();

					link.setAttribute('href', url.toString());
				});
			}

			function handleSortOrderChange(event) {
				var selectedSortOrder = event.target.getAttribute('data-value');
				var urlParams = new URLSearchParams(window.location.search);
				urlParams.set('sortOrder', selectedSortOrder);
				urlParams.set('page', 1);
				window.location.search = urlParams.toString();
			}

			sortOrderLinks.forEach(function (link) {
				link.addEventListener('click', handleSortOrderChange);
			});

			updateSortOrderFromUrl();
			updatePageLinks();
		});
	</script>
}
